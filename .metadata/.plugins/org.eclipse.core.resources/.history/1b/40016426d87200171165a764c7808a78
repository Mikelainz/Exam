RobotSystem rover_wall_e_sys
                     
Event usercmd : usercmd(robotgui(CMD)) 	//(FORWARD button) CMD w(low)
Event sonar : sonar(SONARID,TARGETNAME,DISTANCE) //EVENT ENVIRONMENT SONAR1&2
     
Context  ctxRobot  ip [ host="localhost" port=8070 ] -httpserver

QActor sonar2 context ctxRobot {
	
	Plan init normal 
	println("Sonar2 STARTS");
	delay time(3000);
	emit sonar : sonar(sonar2,wall_e,20);
	println("EVENT SONAR EMITTED");
	repeatPlan
	
}

Robot wall_e QActor rover context ctxRobot {     
	
	Plan init normal 
 			println("Rover STARTS");           
  			//---------UNITY----------
  			//Metodo 1 unity
  			//actorOp workWithUnity("127.0.0.1");//connects to port 6000 192.168.43.229"
			//Metodo 2 unity
			actorOp initUnityConnection("192.168.0.3");
			actorOp createRobotUnity;
			//---------UNITY----------
      		switchToPlan handlecommands;  
			delay time(6000000); 
   			println("rover ENDS")                      

	Plan handlecommands  
			println("rover waits for user commands");    
	/*R2*/ 	sense time(10000) usercmd -> execRobotCommand ;
			repeatPlan 	

	//BUTTON (Forward, Backward, etc) : usercmd("w(low)")
	Plan execRobotCommand resumeLastPlan   
			printCurrentEvent;	
	  		//execCmdGui is defined in RobotActor, CmdUilInterpreter 
	   		onEvent usercmd : usercmd(CMD) ->  //actorOp execCmdGui(CMD)
	   			println(printingTheCommandInQActorWall_e(CMD)) ;
	   		onEvent usercmd : usercmd(CMD) ->
	   			robotForward speed(100) time(60000) react event sonar -> handleSonarEnv
   			
   	Plan handleSonarEnv resumeLastPlan
   			onEvent sonar : sonar(sonar2,wall_e,D) -> robotStop speed(0)  time(0)
   			
   }
 