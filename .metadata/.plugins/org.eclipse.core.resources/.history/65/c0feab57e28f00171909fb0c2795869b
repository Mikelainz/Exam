plan(1,init, sentence(true,move(print,"------------------PLAN INIT------------------"),'','' ))
plan(2,init, sentence(true,move(print,"[ROVER] STARTS"),'','' ))
plan(3,init, sentence(true,move( switchplan(config) ),'','' ))
plan(4,init, sentence(true,move( switchplan(standby) ),'','' ))
plan(5,init, sentence(true,delay( 6000000) ,'','' ))
plan(6,init, sentence(true,move(print,"[ROVER] ENDS"),'','' ))
plan(1,config, sentence(true,move(print,"------------------PLAN CONFIG------------------"),'','' ))
plan(2,config, sentence(true,receiveMsg(''),'','' ))
plan(3,config, sentence(true,msgswitch(daValue, daValue( DA) , addRule( da( DA) )),'','' ))
plan(4,config, sentence(true,msgswitch(daValue, daValue( DA) , move(actorOp,setDa( DA),0,"")),'','' ))
plan(5,config, sentence( da( DA),move(print,daSettedAt( DA)),'','' ))
plan(6,config, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(7,config, sentence( rotationSpeedRight( RSR),move(print,rotationSpeedRight( RSR)),'','' ))
plan(8,config, sentence( rotationSpeedLeft( RSL),move(print,rotationSpeedLeft( RSL)),'','' ))
plan(9,config, sentence( forwardSpeed( FS),move(print,forwardSpeed( FS)),'','' ))
plan(10,config, sentence( rotationTimeRight( RTR),move(print,rotationTimeRight( RTR)),'','' ))
plan(11,config, sentence( rotationTimeLeft( RTL),move(print,rotationTimeLeft( RTL)),'','' ))
plan(12,config, sentence( searchTimeForward( STF),move(print,searchTimeForward( STF)),'','' ))
plan(13,config, sentence( senseTimeFixedObstacle( STFO),move(print,senseTimeFixedObstacle( STFO)),'','' ))
plan(14,config, sentence( finalPointTollerance( FPT),move(print,finalPointTollerance( FPT)),'','' ))
plan(15,config, sentence( finalPointTollerance( FPT),forward(sonarsupport, fptValue,fptValue( FPT)),'','' ))
plan(16,config, sentence(true,move(resumeplan),'','' ))
plan(1,controlReleasedStandby, sentence(true,move(print,"------------------PLAN CONTROL RELEASED STANDBY------------------"),'','' ))
plan(2,controlReleasedStandby, sentence(true,move(print,"[ROVER] Standby[control already taken at least once]."),'','' ))
plan(3,controlReleasedStandby, sentence(true,senseEvent(60000,"local_takeControl","handleTakeControl"),'','' ))
plan(4,controlReleasedStandby, sentence(true,repeatplan() ,'','' ))
plan(1,controlTaken, sentence(true,move(print,"------------------PLAN CONTROL TAKEN------------------"),'','' ))
plan(2,controlTaken, sentence(true,senseEvent(10000,"local_ctrl,local_releaseControl","controlWork,handleReleaseControl"),'local_goHome','handleGoHome' ))
plan(3,controlTaken, sentence(true,repeatplan() ,'','' ))
plan(1,controlWork, sentence(true,move(print,"------------------PLAN CONTROL WORK------------------"),'','' ))
plan(2,controlWork, sentence(-  goingHome ,move(print,"[ROVER] goingHome Rule Deleted!"),'','' ))
plan(3,controlWork, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(4,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( fwd), move( switchplan(ctrlForward) ) ),'','' ))
plan(5,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( bwd), move( switchplan(ctrlBackward) ) ),'','' ))
plan(6,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( lft), move( switchplan(turnLeft90) ) ),'','' ))
plan(7,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( rgt), move( switchplan(turnRight90) ) ),'','' ))
plan(8,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( stp), move( switchplan(ctrlStop) ) ),'','' ))
plan(9,controlWork, sentence(true,move( switchplan(controlTaken) ),'','' ))
plan(1,ctrlBackward, sentence(true,move(print,"------------------PLAN CTRL BACKWARD------------------"),'','' ))
plan(2,ctrlBackward, sentence(true,move( switchplan(turnRight180) ),'','' ))
plan(3,ctrlBackward, sentence(true,move( switchplan(ctrlForward) ),'','' ))
plan(1,ctrlForward, sentence(true,move(print,"------------------PLAN CTRL FORWARD------------------"),'','' ))
plan(2,ctrlForward, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(3,ctrlForward, sentence(true,addRule( goingForward ),'','' ))
plan(4,ctrlForward, sentence( forwardSpeed( FS),move(robotForward,Integer.parseInt(FS),0),'sonarDetect,local_alarm,local_releaseControl,local_ctrl','ctrlStop,handleAlarmTaken,handleReleaseControl,controlWork' ))
plan(5,ctrlForward, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(6,ctrlForward, sentence(true,repeatplan() ,'','' ))
plan(1,ctrlStop, sentence(true,move(print,"------------------PLAN CTRL STOP------------------"),'','' ))
plan(2,ctrlStop, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,ctrlStop, sentence(true,move(robotStop,0,0),'','' ))
plan(4,ctrlStop, sentence(true,move( switchplan(controlTaken) ),'','' ))
plan(1,deadEndLeft, sentence(true,move(print,"------------------PLAN DEADEND LEFT------------------"),'','' ))
plan(2,deadEndLeft, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,deadEndLeft, sentence(true,move(print,"[ROVER] cannot find a door. Terminate."),'','' ))
plan(4,deadEndLeft, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(5,deadEndLeft, sentence(-  searchLeft ,move(print,"[ROVER] searchLeft Rule Deleted!"),'','' ))
plan(6,deadEndLeft, sentence(true,move( switchplan(hilariousEnd) ),'','' ))
plan(7,deadEndLeft, sentence(true,move(actorOp,exit,0,""),'','' ))
plan(1,deadEndRight, sentence(true,move(print,"------------------PLAN DEADEND RIGHT------------------"),'','' ))
plan(2,deadEndRight, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,deadEndRight, sentence(true,addRule( searchLeft ),'','' ))
plan(4,deadEndRight, sentence(true,move( switchplan(turnLeft180) ),'','' ))
plan(5,deadEndRight, sentence( searchTimeForward( STF),move(actorOp,getAttemptRightTotalTime( STF),0,""),'','' ))
plan(6,deadEndRight, sentence( actorOpDone( OP,ARTT),addRule( attemptRightTotalTime( ARTT) ),'','' ))
plan(7,deadEndRight, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(8,deadEndRight, sentence(true,addRule( goingForward ),'','' ))
plan(9,deadEndRight, sentence( deadEndForwardValues( S,T),move(robotForward,Integer.parseInt(S),0),'local_alarm,local_takeControl','handleAlarm,handleTakeControl' ))
plan(10,deadEndRight, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(11,deadEndRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(12,deadEndRight, sentence(true,delay( 1000) ,'','' ))
plan(13,deadEndRight, sentence(true,move( switchplan(handleObstacle) ),'','' ))
plan(1,findTheDoorLeft, sentence(true,move(print,"------------------PLAN FIND THE DOOR LEFT------------------"),'','' ))
plan(2,findTheDoorLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(3,findTheDoorLeft, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(4,findTheDoorLeft, sentence(true,addRule( goingForward ),'','' ))
plan(5,findTheDoorLeft, sentence( searchForwardValues( S,T),move(robotForward,Integer.parseInt(S),0),'sonarDetect,local_alarm,local_takeControl','deadEndLeft,handleAlarm,handleTakeControl' ))
plan(6,findTheDoorLeft, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(7,findTheDoorLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(8,findTheDoorLeft, sentence(true,senseEvent(500,"sonarDetect","handleObstacle"),'','' ))
plan(9,findTheDoorLeft, sentence(true,move( switchplan(handleObstacle) ),'','' ))
plan(1,findTheDoorRight, sentence(true,move(print,"------------------PLAN FIND THE DOOR RIGHT------------------"),'','' ))
plan(2,findTheDoorRight, sentence( noAlarmFDR,move(print,"[ROVER] noAlarmFDR already present."),'','' ))
plan(3,findTheDoorRight, sentence(true,move(actorOp,incAttemptRight,0,""),'','' ))
plan(4,findTheDoorRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(5,findTheDoorRight, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(6,findTheDoorRight, sentence(true,addRule( goingForward ),'','' ))
plan(7,findTheDoorRight, sentence( searchForwardValues( S,T),move(robotForward,Integer.parseInt(S),0),'sonarDetect,local_alarm,local_takeControl','deadEndRight,handleAlarm,handleTakeControl' ))
plan(8,findTheDoorRight, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(9,findTheDoorRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(10,findTheDoorRight, sentence(true,senseEvent(500,"sonarDetect","handleObstacle"),'','' ))
plan(11,findTheDoorRight, sentence(true,move( switchplan(handleObstacle) ),'','' ))
plan(1,fixedObstacle, sentence(true,move(print,"------------------PLAN FIXED OBSTACLE------------------"),'','' ))
plan(2,fixedObstacle, sentence( searchLeft,move( switchplan(findTheDoorLeft) ),'','' ))
plan(3,fixedObstacle, sentence(true,move( switchplan(findTheDoorRight) ),'','' ))
plan(1,goalLine, sentence(true,move(print,"------------------PLAN GOAL LINE------------------"),'','' ))
plan(2,goalLine, sentence(true,move(print,"[ROVER] I'm on the GoalLine."),'','' ))
plan(3,goalLine, sentence(true,receiveMsg(''),'','' ))
plan(4,goalLine, sentence(true,move( switchplan(reachFinalPosition) ),'','' ))
plan(1,goalStandby, sentence(true,move(print,"------------------PLAN GOAL STANDBY------------------"),'','' ))
plan(2,goalStandby, sentence(true,senseEvent(60000,"local_takeControl","handleTakeControl"),'','' ))
plan(3,goalStandby, sentence(true,repeatplan() ,'','' ))
plan(1,goForward, sentence(true,move(print,"------------------PLAN GO FORWARD------------------"),'','' ))
plan(2,goForward, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(3,goForward, sentence(true,addRule( goingForward ),'','' ))
plan(4,goForward, sentence( forwardSpeed( FS),move(robotForward,Integer.parseInt(FS),0),'local_sonar2Support,sonarDetect,local_alarm,local_takeControl','handleSonar2Support,handleObstacle,handleAlarm,handleTakeControl' ))
plan(5,goForward, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(6,goForward, sentence(true,repeatplan() ,'','' ))
plan(1,goForwardHome, sentence(true,move(print,"------------------PLAN GO FORWARD HOME------------------"),'','' ))
plan(2,goForwardHome, sentence( isNextMove( fwd,S,T),move(actorOp,saveStartGoHome( T),0,""),'','' ))
plan(3,goForwardHome, sentence(true,addRule( goingForwardHome ),'','' ))
plan(4,goForwardHome, sentence( isNextMove( fwd,S,T),move(robotForward,Integer.parseInt(S),0),'local_alarm,local_takeControl,sonarDetect','handleAlarmReleased,handleTakeControl,handleObstacleGoHome' ))
plan(5,goForwardHome, sentence(-  goingForwardHome ,move(print,"[ROVER] going forward home deleted"),'','' ))
plan(6,goForwardHome, sentence(true,move(resumeplan),'','' ))
plan(1,goHome, sentence(true,move(print,"------------------PLAN GO HOME------------------"),'','' ))
plan(2,goHome, sentence( isNextMove( fwd,S,T),move( switchplan(goForwardHome) ),'','' ))
plan(3,goHome, sentence( isNextMove( lft,S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(4,goHome, sentence( isNextMove( rgt,S,T),move(robotLeft,Integer.parseInt(S),0),'','' ))
plan(5,goHome, sentence( deleteLastMove( MOVE),move(print,lastMoveDeleted( MOVE)),'','' ))
plan(6,goHome, sentence( pathEmpty,move( switchplan(homeReached) ),'','' ))
plan(1,handleAlarm, sentence(true,move(print,"------------------PLAN HANDLE ALLARM------------------"),'','' ))
plan(2,handleAlarm, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleAlarm, sentence(true,move(robotStop,0,0),'','' ))
plan(4,handleAlarm, sentence(-  noAlarmFDR ,move(actorOp,decAttemptRight,0,""),'','' ))
plan(5,handleAlarm, sentence(true,senseEvent(600000,"local_start,local_takeControl","continue,handleTakeControl"),'','' ))
plan(6,handleAlarm, sentence(true,eventswitch(local_start, »start, move(resumeplan) ),'','' ))
plan(7,handleAlarm, sentence(true,move(resumeplan),'','' ))
plan(1,handleAlarmReleased, sentence(true,move(print,"------------------PLAN HANDLE ALLARM RELEASED------------------"),'','' ))
plan(2,handleAlarmReleased, sentence(-  goingForwardHome ,move( switchplan(saveRemainingTime) ),'','' ))
plan(3,handleAlarmReleased, sentence(true,move(robotStop,0,0),'','' ))
plan(4,handleAlarmReleased, sentence(true,move( switchplan(controlReleasedStandby) ),'','' ))
plan(1,handleAlarmTaken, sentence(true,move(print,"------------------PLAN HANDLE ALLARM TAKEN------------------"),'','' ))
plan(2,handleAlarmTaken, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleAlarmTaken, sentence(true,move(robotStop,0,0),'','' ))
plan(4,handleAlarmTaken, sentence(true,move( switchplan(controlTaken) ),'','' ))
plan(1,handleGoal, sentence(true,move(print,"------------------PLAN HANDLE GOAL------------------"),'','' ))
plan(2,handleGoal, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleGoal, sentence(true,move(print,"[ROVER] point B reached!!"),'','' ))
plan(4,handleGoal, sentence(true,move( switchplan(goalStandby) ),'','' ))
plan(1,handleGoHome, sentence(true,move(print,"------------------PLAN HANDLE GO HOME------------------"),'','' ))
plan(2,handleGoHome, sentence( clearPath( L),move(print,myPathList( L)),'','' ))
plan(3,handleGoHome, sentence( goingHome,move( switchplan(goHome) ),'','' ))
plan(4,handleGoHome, sentence( rotationRightValues( S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(5,handleGoHome, sentence(true,delay( 500) ,'','' ))
plan(6,handleGoHome, sentence( rotationRightValues( S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(7,handleGoHome, sentence(true,addRule( goingHome ),'','' ))
plan(8,handleGoHome, sentence(true,move( switchplan(goHome) ),'','' ))
plan(1,handleObstacle, sentence(true,move(print,"------------------PLAN HANDLE OBSTACLE------------------"),'','' ))
plan(2,handleObstacle, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleObstacle, sentence(true,move(robotStop,0,0),'','' ))
plan(4,handleObstacle, sentence(true,forward(obstaclesupport, checkObstacleType,checkObstacleType),'','' ))
plan(5,handleObstacle, sentence(true,move( switchplan(typeOfObstacle) ),'','' ))
plan(1,handleObstacleGoHome, sentence(true,move(print,"------------------PLAN HANDLE OBSTACLE GO HOME------------------"),'','' ))
plan(2,handleObstacleGoHome, sentence(true,move(robotStop,0,0),'','' ))
plan(3,handleObstacleGoHome, sentence(-  goingForwardHome ,move( switchplan(saveRemainingTime) ),'','' ))
plan(4,handleObstacleGoHome, sentence(true,forward(obstaclesupport, checkObstacleType,checkObstacleType),'','' ))
plan(5,handleObstacleGoHome, sentence( senseTimeFixedObstacle( T),senseEvent(Integer.parseInt(substituteVars(guardVars,"T").replace("'","") ),"noMoreObstacle","goHome"),'local_takeControl','handleTakeControl' ))
plan(6,handleObstacleGoHome, sentence(true,move( switchplan(goHome) ),'','' ))
plan(1,handleReleaseControl, sentence(true,move(print,"------------------PLAN HANDLE RELEASE CONTROL------------------"),'','' ))
plan(2,handleReleaseControl, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleReleaseControl, sentence(true,move(robotStop,0,0),'','' ))
plan(4,handleReleaseControl, sentence(true,move( switchplan(controlReleasedStandby) ),'','' ))
plan(1,handleSonar2Support, sentence(true,move(print,"------------------PLAN HANDLE SONAR2 SUPPORT------------------"),'','' ))
plan(2,handleSonar2Support, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleSonar2Support, sentence(-  searchLeft ,move(print,"[ROVER] searchLeft Rule Deleted!"),'','' ))
plan(4,handleSonar2Support, sentence(true,eventswitch(local_sonar2Support, »sonar2Support( TN,D), move(robotStop,0,0) ),'','' ))
plan(5,handleSonar2Support, sentence(true,eventswitch(local_sonar2Support, »sonar2Support( TN,D), move( switchplan(goalLine) ) ),'','' ))
plan(6,handleSonar2Support, sentence(true,move(resumeplan),'','' ))
plan(1,handleStart, sentence(true,move(print,"------------------PLAN HANDLE START------------------"),'','' ))
plan(2,handleStart, sentence(true,move( switchplan(reachB) ),'','' ))
plan(1,handleTakeControl, sentence(true,move(print,"------------------PLAN HANDLE TAKE CONTROL------------------"),'','' ))
plan(2,handleTakeControl, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(3,handleTakeControl, sentence(-  goingForwardHome ,move( switchplan(saveRemainingTime) ),'','' ))
plan(4,handleTakeControl, sentence(true,move(robotStop,0,0),'','' ))
plan(5,handleTakeControl, sentence(true,move( switchplan(controlTaken) ),'','' ))
plan(1,hilariousEnd, sentence(true,move(print,"------------------PLAN HILARIOUS END------------------"),'','' ))
plan(2,hilariousEnd, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(3,hilariousEnd, sentence(true,move( switchplan(turnLeft180) ),'','' ))
plan(4,hilariousEnd, sentence(true,move( switchplan(turnRight180) ),'','' ))
plan(5,hilariousEnd, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(6,hilariousEnd, sentence(true,move(resumeplan),'','' ))
plan(1,homeReached, sentence(true,move(print,"------------------PLAN HOME REACHED------------------"),'','' ))
plan(2,homeReached, sentence(-  searchLeft ,move(print,"[ROVER] searchLeft Rule Deleted!"),'','' ))
plan(3,homeReached, sentence( rotationRightValues( S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(4,homeReached, sentence( rotationRightValues( S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(5,homeReached, sentence(-  goingHome ,move(print,"[ROVER] goingHome Rule Deleted!"),'','' ))
plan(6,homeReached, sentence(true,move( switchplan(standby) ),'','' ))
plan(1,mobileObstacle, sentence(true,move(print,"------------------PLAN MOBILE OBSTACLE------------------"),'','' ))
plan(2,mobileObstacle, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,reachB, sentence(true,move(print,"------------------PLAN REACHB------------------"),'','' ))
plan(2,reachB, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,reachFinalPosition, sentence(true,move(print,"------------------PLAN REACH FINAL POSITION------------------"),'','' ))
plan(2,reachFinalPosition, sentence(true,move(actorOp,saveStart,0,""),'','' ))
plan(3,reachFinalPosition, sentence(true,addRule( goingForward ),'','' ))
plan(4,reachFinalPosition, sentence( forwardSpeed( FS),move(robotForward,Integer.parseInt(FS),0),'local_goal,local_alarm,local_takeControl','handleGoal,handleAlarm,handleTakeControl' ))
plan(5,reachFinalPosition, sentence(-  goingForward ,move( switchplan(saveForwardPath) ),'','' ))
plan(6,reachFinalPosition, sentence(true,repeatplan() ,'','' ))
plan(1,saveForwardPath, sentence(true,move(print,"------------------PLAN SAVE PATH------------------"),'','' ))
plan(2,saveForwardPath, sentence(true,move(actorOp,getDurationTime,0,""),'','' ))
plan(3,saveForwardPath, sentence( saveMove( fwd),move(resumeplan),'','' ))
plan(1,saveRemainingTime, sentence(true,move(print,"------------------PLAN SAVE REMAINING TIME------------------"),'','' ))
plan(2,saveRemainingTime, sentence( deleteLastMove( MOVE),move(print,lastMoveDeleted( MOVE)),'','' ))
plan(3,saveRemainingTime, sentence(true,move(actorOp,getRemainingTime,0,""),'','' ))
plan(4,saveRemainingTime, sentence( saveMove( fwd),move(resumeplan),'','' ))
plan(1,standby, sentence(true,move(print,"------------------PLAN STANDBY------------------"),'','' ))
plan(2,standby, sentence(true,senseEvent(10000,"local_start","handleStart"),'','' ))
plan(3,standby, sentence(true,repeatplan() ,'','' ))
plan(1,turnLeft90, sentence(true,move(print,"------------------PLAN TURN LEFT 90------------------"),'','' ))
plan(2,turnLeft90, sentence( rotationLeftValues( S,T),move(robotLeft,Integer.parseInt(S),0),'','' ))
plan(3,turnLeft90, sentence( saveMove( lft),move(resumeplan),'','' ))
plan(4,turnLeft90, sentence(true,move(resumeplan),'','' ))
plan(1,turnLeft180, sentence(true,move(print,"------------------PLAN TURN LEFT 180------------------"),'','' ))
plan(2,turnLeft180, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(3,turnLeft180, sentence(true,delay( 500) ,'','' ))
plan(4,turnLeft180, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(5,turnLeft180, sentence(true,move(resumeplan),'','' ))
plan(1,turnRight90, sentence(true,move(print,"------------------PLAN TURN RIGHT 90------------------"),'','' ))
plan(2,turnRight90, sentence( rotationRightValues( S,T),move(robotRight,Integer.parseInt(S),0),'','' ))
plan(3,turnRight90, sentence( saveMove( rgt),move(resumeplan),'','' ))
plan(4,turnRight90, sentence(true,move(resumeplan),'','' ))
plan(1,turnRight180, sentence(true,move(print,"------------------PLAN TURN RIGHT 180------------------"),'','' ))
plan(2,turnRight180, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(3,turnRight180, sentence(true,delay( 500) ,'','' ))
plan(4,turnRight180, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(5,turnRight180, sentence(true,move(resumeplan),'','' ))
plan(1,typeOfObstacle, sentence(true,move(print,"------------------PLAN TYPE OF OBSTACLE------------------"),'','' ))
plan(2,typeOfObstacle, sentence( senseTimeFixedObstacle( T),senseEvent(Integer.parseInt(substituteVars(guardVars,"T").replace("'","") ),"noMoreObstacle","mobileObstacle"),'local_takeControl','handleTakeControl' ))
plan(3,typeOfObstacle, sentence(true,move( switchplan(fixedObstacle) ),'','' ))
