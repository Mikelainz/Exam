/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.roversupport;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;

import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Roversupport extends AbstractRoversupport { 
	private int da;
	private int finalPointTollerance;
	
	public Roversupport(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	private void readConfigurations() throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("configurations.txt"));
		StringTokenizer st;
		String line;
		while((line=br.readLine())!=null && !line.trim().isEmpty()) {
			st = new StringTokenizer(line, ":");
			//Delete first token
			System.out.println(line);
			if(line.startsWith("finalPointTollerance")) this.finalPointTollerance = Integer.parseInt(st.nextToken().trim());
		}
		br.close();
	}
	
	public void setDa(int da) {
		this.da = da;
	}
	
	public boolean goalTest(int currentPosition) {
		int difference = da-currentPosition;
		if ( Math.abs(difference) <= finalPointTollerance  ) 
			return true;
		else 
			return false;
	}
}
