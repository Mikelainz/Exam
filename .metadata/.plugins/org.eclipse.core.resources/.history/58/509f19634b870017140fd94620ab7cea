plan(1,init, sentence(true,move(print,"Rover STARTS"),'','' ))
plan(2,init, sentence(true,move( switchplan(config) ),'','' ))
plan(3,init, sentence(true,move( switchplan(handleSonar1) ),'','' ))
plan(4,init, sentence(true,move( switchplan(handlecommands) ),'','' ))
plan(5,init, sentence(true,delay( 6000000) ,'','' ))
plan(6,init, sentence(true,move(print,"rover ENDS"),'','' ))
plan(1,config, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(2,config, sentence(true,move(actorOp,getRotationTimeRight,0,""),'','' ))
plan(3,config, sentence(-  actorOpDone( OP,RTR) ,addRule( rotationTimeRight( RTR) ),'','' ))
plan(4,config, sentence(true,move(actorOp,getRotationTimeLeft,0,""),'','' ))
plan(5,config, sentence(-  actorOpDone( OP,RTL) ,addRule( rotationTimeLeft( RTL) ),'','' ))
plan(6,config, sentence(true,move(actorOp,getSearchTimeForward,0,""),'','' ))
plan(7,config, sentence(-  actorOpDone( OP,STF) ,addRule( searchTimeForward( STF) ),'','' ))
plan(8,config, sentence(true,move(actorOp,getSenseTimeFixedObstacle,0,""),'','' ))
plan(9,config, sentence(-  actorOpDone( OP,STFO) ,addRule( senseTimeFixedObstacle( STFO) ),'','' ))
plan(10,config, sentence(true,senseEvent(10000,"sonar","handleSonar1"),'','' ))
plan(11,config, sentence( da( X),move(resumeplan),'','' ))
plan(1,handlecommands, sentence(true,move(print,"rover waits for user commands"),'','' ))
plan(2,handlecommands, sentence(true,senseEvent(10000,"usercmd","execRobotCommand"),'','' ))
plan(3,handlecommands, sentence(true,repeatplan() ,'','' ))
plan(1,execRobotCommand, sentence(true,printCurrentEvent(false),'','' ))
plan(2,execRobotCommand, sentence(true,eventswitch(usercmd, »usercmd( CMD), move(print,printingTheCommandInQActorWall_e( CMD)) ),'','' ))
plan(3,execRobotCommand, sentence(true,eventswitch(usercmd, »usercmd( CMD), move( switchplan(goForward) ) ),'','' ))
plan(4,execRobotCommand, sentence(true,move(resumeplan),'','' ))
plan(1,goForward, sentence(true,move(robotForward,100,0),'sonar,obstacle','handleSonar2,handleObstacle' ))
plan(1,handleSonar1, sentence(true,eventswitch(sonar, »sonar( sonar1,wall_e,D), move(actorOp,setDa( D),0,"") ),'','' ))
plan(1,handleSonar2, sentence(-  goLeft ,move(print,"GoLeft Rule Deleted!"),'','' ))
plan(2,handleSonar2, sentence(true,eventswitch(sonar, »sonar( sonar2,wall_e,D), move(robotStop,0,0) ),'','' ))
plan(3,handleSonar2, sentence(true,eventswitch(sonar, »sonar( sonar2,wall_e,D), move(actorOp,setCurrentPoint( D),0,"") ),'','' ))
plan(4,handleSonar2, sentence(true,move( switchplan(evaluateCurrentPoint) ),'','' ))
plan(1,evaluateCurrentPoint, sentence(true,move(actorOp,chooseDirection,0,""),'','' ))
plan(2,evaluateCurrentPoint, sentence(-  actorOpDone( OP,0) ,move( switchplan(goal) ),'','' ))
plan(3,evaluateCurrentPoint, sentence(-  actorOpDone( OP,1) ,move( switchplan(turnRight90) ),'','' ))
plan(4,evaluateCurrentPoint, sentence(-  actorOpDone( OP,2) ,move( switchplan(turnLeft90) ),'','' ))
plan(5,evaluateCurrentPoint, sentence(true,move( switchplan(reachFinalPosition) ),'','' ))
plan(1,reachFinalPosition, sentence(true,move(robotForward,500,0),'','' ))
plan(2,reachFinalPosition, sentence(true,senseEvent(100,"sonar","continue"),'','' ))
plan(3,reachFinalPosition, sentence(true,eventswitch(sonar, »sonar( sonar2,wall_e,D), move(actorOp,evaluate,0,"") ),'','' ))
plan(1,goal, sentence(true,move(print,"Point B reached!!"),'','' ))
plan(2,goal, sentence(true,move(robotRight,100,0),'','' ))
plan(1,handleObstacle, sentence(true,eventswitch(obstacle, »obstacle( DISTANCE), move(robotStop,0,0) ),'','' ))
plan(2,handleObstacle, sentence(true,move( switchplan(typeOfObstacle) ),'','' ))
plan(1,typeOfObstacle, sentence( senseTimeFixedObstacle( T),senseEvent(Integer.parseInt(substituteVars(guardVars,"T").replace("'","") ),"noMoreObstacle","mobileObstacle"),'','' ))
plan(2,typeOfObstacle, sentence(true,move( switchplan(fixedObstacle) ),'','' ))
plan(1,mobileObstacle, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,turnRight90, sentence( rotationTimeRight( T),move(robotRight,100,0),'','' ))
plan(2,turnRight90, sentence(true,move(resumeplan),'','' ))
plan(1,turnLeft90, sentence( rotationTimeLeft( T),move(robotLeft,100,0),'','' ))
plan(2,turnLeft90, sentence(true,move(resumeplan),'','' ))
plan(1,fixedObstacle, sentence(true,move(print,"Aye man wake up, it's steady this fcking bastard!!"),'','' ))
plan(2,fixedObstacle, sentence( goLeft,move( switchplan(findTheDoorLeft) ),'','' ))
plan(3,fixedObstacle, sentence(true,move( switchplan(findTheDoorRight) ),'','' ))
plan(1,findTheDoorRight, sentence(true,move(actorOp,incAttemptRight,0,""),'','' ))
plan(2,findTheDoorRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(3,findTheDoorRight, sentence( searchTimeForward( T),move(robotForward,100,0),'obstacle','deadEndRight' ))
plan(4,findTheDoorRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(5,findTheDoorRight, sentence(true,senseEvent(500,"obstacle","handleObstacle"),'','' ))
plan(6,findTheDoorRight, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,findTheDoorLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(2,findTheDoorLeft, sentence( searchTimeForward( T),move(robotForward,100,0),'obstacle','deadEndLeft' ))
plan(3,findTheDoorLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(4,findTheDoorLeft, sentence(true,senseEvent(500,"obstacle","handleObstacle"),'','' ))
plan(5,findTheDoorLeft, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,deadEndRight, sentence(true,addRule( goLeft ),'','' ))
plan(2,deadEndRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(3,deadEndRight, sentence(true,delay( 1000) ,'','' ))
plan(4,deadEndRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(5,deadEndRight, sentence(true,move(actorOp,getAttemptRightTotalTime,0,""),'','' ))
plan(6,deadEndRight, sentence( actorOpDone( OP,Result),move(print,risultatoTotalTime( Result)),'','' ))
plan(7,deadEndRight, sentence(-  actorOpDone( OP,Result) ,move(robotForward,100,0),'','' ))
plan(8,deadEndRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(9,deadEndRight, sentence(true,delay( 1000) ,'','' ))
plan(10,deadEndRight, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,deadEndLeft, sentence(true,move(print,"Cannot find a door. Terminate."),'','' ))
plan(2,deadEndLeft, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(3,deadEndLeft, sentence(-  goLeft ,move(print,"GoLeft Rule Deleted!"),'','' ))
plan(4,deadEndLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(5,deadEndLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(6,deadEndLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(7,deadEndLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(8,deadEndLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(9,deadEndLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(10,deadEndLeft, sentence(true,move( switchplan(handlecommands) ),'','' ))
