plan(1,init, sentence(true,move(print,"[ROVER] STARTS"),'','' ))
plan(2,init, sentence(true,move( switchplan(config) ),'','' ))
plan(3,init, sentence(true,move( switchplan(standby) ),'','' ))
plan(4,init, sentence(true,delay( 6000000) ,'','' ))
plan(5,init, sentence(true,move(print,"[ROVER] ENDS"),'','' ))
plan(1,config, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(2,config, sentence(true,move(actorOp,getRotationTimeRight,0,""),'','' ))
plan(3,config, sentence(-  actorOpDone( OP,RTR) ,addRule( rotationTimeRight( RTR) ),'','' ))
plan(4,config, sentence(true,move(actorOp,getRotationTimeLeft,0,""),'','' ))
plan(5,config, sentence(-  actorOpDone( OP,RTL) ,addRule( rotationTimeLeft( RTL) ),'','' ))
plan(6,config, sentence(true,move(actorOp,getSearchTimeForward,0,""),'','' ))
plan(7,config, sentence(-  actorOpDone( OP,STF) ,addRule( searchTimeForward( STF) ),'','' ))
plan(8,config, sentence(true,move(actorOp,getSenseTimeFixedObstacle,0,""),'','' ))
plan(9,config, sentence(-  actorOpDone( OP,STFO) ,addRule( senseTimeFixedObstacle( STFO) ),'','' ))
plan(10,config, sentence(true,move(actorOp,getFinalPointTollerance,0,""),'','' ))
plan(11,config, sentence(-  actorOpDone( OP,FPT) ,addRule( finalPointTollerance( FPT) ),'','' ))
plan(12,config, sentence(true,receiveMsg(''),'','' ))
plan(13,config, sentence(true,msgswitch(daValue, daValue( DA) , addRule( da( DA) )),'','' ))
plan(14,config, sentence(true,msgswitch(daValue, daValue( DA) , move(actorOp,setDa( DA),0,"")),'','' ))
plan(15,config, sentence( da( X),move(resumeplan),'','' ))
plan(1,standby, sentence(true,move(print,"[ROVER] waits to start."),'','' ))
plan(2,standby, sentence(true,delay( 10000) ,'local_start,local_takeControl,local_alarm','handleStart,handleTakeControl,handleAlarm' ))
plan(3,standby, sentence(true,repeatplan() ,'','' ))
plan(1,handleStart, sentence(true,move( switchplan(goForward) ),'','' ))
plan(2,handleStart, sentence(true,move(resumeplan),'','' ))
plan(1,handleTakeControl, sentence(true,move(robotStop,0,0),'','' ))
plan(2,handleTakeControl, sentence(true,move( switchplan(controlWork) ),'','' ))
plan(1,controlWork, sentence(true,senseEvent(10000,"local_ctrl","continue"),'local_releaseControl,local_alarm','handleReleaseControl,handleAlarmControl' ))
plan(2,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( fwd), move( switchplan(ctrlForward) ) ),'','' ))
plan(3,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( bwd), move( switchplan(ctrlBackward) ) ),'','' ))
plan(4,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( lft), move( switchplan(turnLeft90) ) ),'','' ))
plan(5,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( rgt), move( switchplan(turnRight90) ) ),'','' ))
plan(6,controlWork, sentence(true,eventswitch(local_ctrl, »ctrl( stp), move( switchplan(ctrlStop) ) ),'','' ))
plan(7,controlWork, sentence(true,repeatplan() ,'','' ))
plan(1,handleReleaseControl, sentence(true,move(robotStop,0,0),'','' ))
plan(2,handleReleaseControl, sentence(true,move( switchplan(controlReleasedStandby) ),'','' ))
plan(1,controlReleasedStandby, sentence(true,senseEvent(5000,"local_takeControl,local_alarm","handleTakeControl,handleAlarmControl"),'','' ))
plan(2,controlReleasedStandby, sentence(true,repeatplan() ,'','' ))
plan(1,ctrlForward, sentence(true,move(robotForward,100,0),'sonarDetect,local_alarm,local_releaseControl,local_ctrl','ctrlStop,handleAlarmControl,handleReleaseControl,controlWork' ))
plan(2,ctrlForward, sentence(true,repeatplan() ,'','' ))
plan(1,handleAlarmControl, sentence(true,move( switchplan(ctrlStop) ),'','' ))
plan(1,ctrlStop, sentence(true,move(robotStop,0,0),'','' ))
plan(2,ctrlStop, sentence(true,move( switchplan(controlWork) ),'','' ))
plan(1,ctrlBackward, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(2,ctrlBackward, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(3,ctrlBackward, sentence(true,move( switchplan(ctrlForward) ),'','' ))
plan(1,handleAlarm, sentence(true,move(robotStop,0,0),'','' ))
plan(2,handleAlarm, sentence(true,senseEvent(10000,"local_start","continue"),'','' ))
plan(3,handleAlarm, sentence(true,eventswitch(local_start, »start, move(print,"[ROVER] resuming From Alarm") ),'','' ))
plan(1,goForward, sentence(true,move(robotForward,100,0),'local_sonar2Support,sonarDetect,local_alarm,local_takeControl','handleSonar2Support,handleObstacle,handleAlarm,handleTakeControl' ))
plan(2,goForward, sentence(true,repeatplan() ,'','' ))
plan(1,handleSonar2Support, sentence(-  goLeft ,move(print,"[ROVER] goLeft Rule Deleted!"),'','' ))
plan(2,handleSonar2Support, sentence(true,eventswitch(local_sonar2Support, »sonar2Support( wall_e,D), move(robotStop,0,0) ),'','' ))
plan(3,handleSonar2Support, sentence(true,eventswitch(local_sonar2Support, »sonar2Support( wall_e,D), move( switchplan(goalLine) ) ),'','' ))
plan(4,handleSonar2Support, sentence(true,move(resumeplan),'','' ))
plan(1,goalLine, sentence(true,move(print,"[ROVER] I'm on the GoalLine."),'','' ))
plan(2,goalLine, sentence(true,eventswitch(local_sonar2Support, »sonar2Support( wall_e,D), move(actorOp,chooseDirection( D),0,"") ),'','' ))
plan(3,goalLine, sentence(-  actorOpDone( OP,0) ,move( switchplan(goal) ),'','' ))
plan(4,goalLine, sentence(-  actorOpDone( OP,1) ,move( switchplan(turnRight90) ),'','' ))
plan(5,goalLine, sentence(-  actorOpDone( OP,2) ,move( switchplan(turnLeft90) ),'','' ))
plan(6,goalLine, sentence(true,move( switchplan(reachFinalPosition) ),'','' ))
plan(1,reachFinalPosition, sentence(true,move(robotForward,100,0),'local_goal,local_alarm,local_takeControl','goal,handleAlarm,handleTakeControl' ))
plan(2,reachFinalPosition, sentence(true,repeatplan() ,'','' ))
plan(1,goal, sentence(true,move(print,"[ROVER] point B reached!!"),'','' ))
plan(2,goal, sentence(true,move(robotRight,100,0),'','' ))
plan(3,goal, sentence(true,move(actorOp,exit,0,""),'','' ))
plan(1,handleObstacle, sentence(true,eventswitch(sonarDetect, »sonarDetect( DISTANCE), move(robotStop,0,0) ),'','' ))
plan(2,handleObstacle, sentence(true,move( switchplan(typeOfObstacle) ),'','' ))
plan(1,typeOfObstacle, sentence( senseTimeFixedObstacle( T),senseEvent(Integer.parseInt(substituteVars(guardVars,"T").replace("'","") ),"noMoreObstacle","mobileObstacle"),'local_alarm,local_takeControl','handleAlarm,handleTakeControl' ))
plan(2,typeOfObstacle, sentence(true,move( switchplan(fixedObstacle) ),'','' ))
plan(1,mobileObstacle, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,turnRight90, sentence( rotationTimeRight( T),move(robotRight,100,0),'','' ))
plan(2,turnRight90, sentence(true,move(resumeplan),'','' ))
plan(1,turnLeft90, sentence( rotationTimeLeft( T),move(robotLeft,100,0),'','' ))
plan(2,turnLeft90, sentence(true,move(resumeplan),'','' ))
plan(1,fixedObstacle, sentence( goLeft,move( switchplan(findTheDoorLeft) ),'','' ))
plan(2,fixedObstacle, sentence(true,move( switchplan(findTheDoorRight) ),'','' ))
plan(1,findTheDoorRight, sentence(true,move(actorOp,incAttemptRight,0,""),'','' ))
plan(2,findTheDoorRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(3,findTheDoorRight, sentence( searchTimeForward( T),move(robotForward,100,0),'sonarDetect,local_alarm,local_takeControl','deadEndRight,handleAlarm,handleTakeControl' ))
plan(4,findTheDoorRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(5,findTheDoorRight, sentence(true,senseEvent(500,"sonarDetect","handleObstacle"),'','' ))
plan(6,findTheDoorRight, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,findTheDoorLeft, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(2,findTheDoorLeft, sentence( searchTimeForward( T),move(robotForward,100,0),'sonarDetect,local_alarm,local_takeControl','deadEndLeft,handleAlarm,handleTakeControl' ))
plan(3,findTheDoorLeft, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(4,findTheDoorLeft, sentence(true,senseEvent(500,"sonarDetect","handleObstacle"),'','' ))
plan(5,findTheDoorLeft, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,deadEndRight, sentence(true,addRule( goLeft ),'','' ))
plan(2,deadEndRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(3,deadEndRight, sentence(true,delay( 1000) ,'local_alarm,local_takeControl','handleAlarm,handleTakeControl' ))
plan(4,deadEndRight, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(5,deadEndRight, sentence(true,move(actorOp,getAttemptRightTotalTime,0,""),'','' ))
plan(6,deadEndRight, sentence( actorOpDone( OP,Result),move(print,risultatoTotalTime( Result)),'','' ))
plan(7,deadEndRight, sentence(-  actorOpDone( OP,Result) ,move(robotForward,100,0),'local_alarm,local_takeControl','handleAlarm,handleTakeControl' ))
plan(8,deadEndRight, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(9,deadEndRight, sentence(true,delay( 1000) ,'','' ))
plan(10,deadEndRight, sentence(true,move( switchplan(goForward) ),'','' ))
plan(1,deadEndLeft, sentence(true,move(print,"[ROVER] cannot find a door. Terminate."),'','' ))
plan(2,deadEndLeft, sentence(true,move(actorOp,setAttemptRight( 0),0,""),'','' ))
plan(3,deadEndLeft, sentence(-  goLeft ,move(print,"[ROVER] goLeft Rule Deleted!"),'','' ))
plan(4,deadEndLeft, sentence(true,move( switchplan(hilariousEnd) ),'','' ))
plan(5,deadEndLeft, sentence(true,move(actorOp,exit,0,""),'','' ))
plan(1,hilariousEnd, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(2,hilariousEnd, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(3,hilariousEnd, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(4,hilariousEnd, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(5,hilariousEnd, sentence(true,move( switchplan(turnRight90) ),'','' ))
plan(6,hilariousEnd, sentence(true,move( switchplan(turnLeft90) ),'','' ))
plan(7,hilariousEnd, sentence(true,move(resumeplan),'','' ))
